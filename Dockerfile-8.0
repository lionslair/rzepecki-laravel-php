FROM ubuntu:20.04
LABEL maintainer="Nathan Rzepecki <nathan@lionslair.net.au>"

ARG DEBIAN_FRONTEND=noninteractive

ENV pip_packages "ansible"

# Install dependencies.
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
    apt-transport-https \
    apt-utils \
    automake autoconf \
    bzip2 \
    curl \
    ffmpeg \
    fonts-liberation \
    gettext \
    ghostscript \
    gifsicle \
    gnupg  \
    graphviz \
    gtk2-engines-pixbuf \
    imagemagick \
    jpegoptim \
    less \
    libappindicator3-1 \
    libatk-bridge2.0-0 \
    libatspi2.0-0 \
    libgbm1 \
    libgtk-3-0 \
    libgtk2.0-0 xdg-utils \
    libmcrypt-dev \
    libnss3 libgconf-2-4 \
    libpng-dev \
    libxpm4 \
    libxrender1 \
    libxtst6 \
    libzip-dev \
    locales \
    memcached \
    optipng \
    perl \
    pngquant \
    python3-dev \
    python3-pip \
    python3-setuptools \
    python3-yaml \
    rsyslog \
    systemd \
    systemd-cron \
    ruby \
    snmp \
    snmp-mibs-downloader \
    software-properties-common \
    sudo \
    tar \
    unzip \
    wget \
    x11-apps \
    xfonts-100dpi \
    xfonts-75dpi \
    xfonts-base \
    xfonts-cyrillic \
    xfonts-scalable \
    xvfb \
    zip \
    && wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | apt-key add - \
    && CHROMECACHEBUSTER=$(date --utc "+%Y%m%d-%H%M%S") \
    && wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb?$CHROMECACHEBUSTER -O google-chrome-stable_current_amd64.deb \
    && dpkg -i --force-depends google-chrome-stable_current_amd64.deb \
    && apt-get -y -f install \
    && dpkg -i --force-depends google-chrome-stable_current_amd64.deb \
    # && CHROMESTABLEVERSION=$(dpkg-deb -f google-chrome-stable_current_amd64.deb version) \
    # && CHROMEMAJORVERSION=$(echo ${CHROMESTABLEVERSION%%.*}) \
    && rm google-chrome-stable_current_amd64.deb \
    && CHROMEVERSION=$(curl https://chromedriver.storage.googleapis.com/LATEST_RELEASE) \
    # && CHROMEVERSION=$(curl https://chromedriver.storage.googleapis.com/LATEST_RELEASE_${CHROMEMAJORVERSION}) \
    && wget https://chromedriver.storage.googleapis.com/$CHROMEVERSION/chromedriver_linux64.zip \
    && unzip chromedriver_linux64.zip \
    && mv chromedriver /usr/local/bin/ \
    && rm chromedriver_linux64.zip \
    && rm -Rf /var/lib/apt/lists/* \
    && rm -Rf /usr/share/doc && rm -Rf /usr/share/man \
    && apt-get clean \
    && wget https://github.com/wkhtmltopdf/packaging/releases/download/0.12.6-1/wkhtmltox_0.12.6-1.focal_amd64.deb -O wkhtmltox_0.12.6-1.focal_amd64.deb \
    && dpkg -i --force-depends wkhtmltox_0.12.6-1.focal_amd64.deb \
    && wkhtmltopdf --version \
    && rm wkhtmltox_0.12.6-1.focal_amd64.deb 

RUN sed -i 's/^\($ModLoad imklog\)/#\1/' /etc/rsyslog.conf

# Fix potential UTF-8 errors with ansible-test.
RUN locale-gen en_US.UTF-8

# Install Ansible via Pip.
RUN pip3 install $pip_packages

COPY initctl_faker .
RUN chmod +x initctl_faker && rm -fr /sbin/initctl && ln -s /initctl_faker /sbin/initctl

# Install Ansible inventory file
RUN mkdir -p /etc/ansible
RUN echo "[local]\nlocalhost ansible_connection=local" > /etc/ansible/hosts

# Remove unnecessary getty and udev targets that result in high CPU usage when using
# multiple containers with Molecule (https://github.com/ansible/molecule/issues/1104)
RUN rm -f /lib/systemd/system/systemd*udev* \
  && rm -f /lib/systemd/system/getty.target

# Copy provisioning directory, variable overrides, and scripts into container.
COPY ./ /etc/ansible/laravel-vm
COPY ./provisioning/docker/vars/docker-hub-overrides.yml /etc/ansible/laravel-vm/local.config.yml

# Get the roles
RUN ansible-galaxy install -r /etc/ansible/laravel-vm/provisioning/requirements.yml

# lets see what this outputs
RUN ps aux|grep systemd

# systemd status
RUN systemctl status

# ensure systemd running
RUN systemctl daemon-reexec

# Provision Ubuntu VM inside Docker.
RUN ansible-playbook -vvvv /etc/ansible/laravel-vm/provisioning/playbook-php8.yml

# one last item
RUN npm install -g svgo

VOLUME ["/sys/fs/cgroup", "/tmp", "/run"]
CMD ["/lib/systemd/systemd"]